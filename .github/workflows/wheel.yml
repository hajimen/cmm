name: Python package

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build Python wheel

    strategy:
      matrix:
      # Do not forget to sync the matrix with below!
        os: [ubuntu-22.04, ubuntu-22.04-arm, macos-13, windows-latest, windows-11-arm]
        python-version: ["3.11", "3.12", "3.13", "3.14"]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Set up Python ${{ matrix.os }} ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: python -m pip install --upgrade pip build pillow numpy
      - name: Build
        run: ${{ (startsWith(matrix.os, 'macos') && 'MACOSX_DEPLOYMENT_TARGET=11') || '' }} python -m build --wheel
      - name: Manylinux-ize
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          pip install auditwheel
          auditwheel repair -w dist dist/cmm*
          rm dist/*-linux_*
      - name: Test
        run: python -m unittest ./tests/test_from_python.py
      - name: Upload whl file
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-${{ matrix.python-version }}-whl
          path: dist/

  publish-to-pypi:
    name: PublishPyPI
    needs:
    - build
    runs-on: ubuntu-latest

    environment:
      name: pypi
      url: https://pypi.org/p/cmm-16bit

    permissions:
      id-token: write

    strategy:
      max-parallel: 1
      matrix:
        os: [ubuntu-22.04, ubuntu-22.04-arm, macos-13, windows-latest, windows-11-arm]
        python-version: ["3.11", "3.12", "3.13", "3.14"]

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: ${{ matrix.os }}-${{ matrix.python-version }}-whl
        path: dist/
    - name: Publish distribution ðŸ“¦ to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
